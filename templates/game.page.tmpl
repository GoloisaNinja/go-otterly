{{template "base" .}}
{{define "title"}}
    {{.Data.game.Title}}
{{end}}
{{define "css"}}
    <link rel="stylesheet" href="../static/stylesheets/css/game.css"/>
{{end}}
{{define "content"}}
    <div class="game-template-wrapper">
        {{block "game-loading" .}}
        {{end}}
        <div id="gi-wrapper" class="game-interface-wrapper">
            <div id="game-screen" class="game-screen">
                {{block "game-menubar" .}}
                {{end}}
                <div class="game-content-wrapper" id="game-content-wrapper">
                    <div class="status-wrapper">
                        <p class="status">Status: <span id="status"></span></p>
                    </div>
                    <p class="node-text" id="nodeText">{{.Data.game.Node.Text}}</p>
                    <div class="options-wrapper" id="options-wrapper">
                        {{range $val := .Data.game.Node.Options}}
                            <p class="option" id={{$val.ID}} data-command={{$val.Command}}>{{$val.Text}}</p>
                        {{end}}
                    </div>
                    <div class="input-wrapper">
                        <span class="terminal-span">command: </span>
                        <input class="user-input" id="user-input"/>
                    </div>
                    <p class="error">Error@Console ~ % <span id="error-message">null</span></p>
                </div>
            </div>
        </div>
        {{block "game-modal" .}}
        {{end}}
    </div>
{{end}}
{{define "js"}}
    <script src="
    https://cdn.jsdelivr.net/npm/axios@1.3.1/dist/axios.min.js
    "></script>
    <script type="module">
        import {gameState} from "../static/js/gameState.js";
        import {GameStartUp} from "../static/js/gameStartUp.js";
        import {GetNodeAndAlignState, ReturnNextNode} from "../static/js/gameLogic.js";

        const gs = gameState()
        const gameTitle = {{.Data.game.Title}}
        const totalNodes = {{.Data.game.TotalNodes}}
        const defaultOptions = {{.Data.game.Node.Options}}
        GameStartUp(gs, gameTitle, totalNodes)

        async function handleInput(userCommand) {
            const nextNode = ReturnNextNode(gs, userCommand, defaultOptions)
            if (nextNode !== null) {
                await GetNodeAndAlignState(gs, nextNode)
            }
        }
        const ui = document.getElementById("user-input")
        ui.addEventListener("keydown", (e) => {
            if (e.key === "Enter") {
                handleInput(e.target.value)
            }
        })
    </script>
{{end}}